name: Codemagic AutoFix (final)

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'smart or control'
        required: true
        default: 'smart'

jobs:
  autofix:
    runs-on: ubuntu-latest
    env:
      ORG: ibrahimalsattouf88-lab
    steps:
      - uses: actions/checkout@v4

      - name: Vars
        id: v
        shell: bash
        run: |
          if [ "${{ github.event.inputs.app }}" = "smart" ]; then
            echo "repo=smart-assistant-app" >> $GITHUB_OUTPUT
            echo "pkg=com.example.smartassistant" >> $GITHUB_OUTPUT
            echo "wf=${{ secrets.CODEMAGIC_WORKFLOW_ID_SMART_ASSISTANT }}" >> $GITHUB_OUTPUT
          else
            echo "repo=control-panel-app" >> $GITHUB_OUTPUT
            echo "pkg=com.example.controlpanel" >> $GITHUB_OUTPUT
            echo "wf=${{ secrets.CODEMAGIC_WORKFLOW_ID_CONTROL_PANEL }}" >> $GITHUB_OUTPUT
          fi

      - name: Pick token
        id: t
        shell: bash
        run: |
          if [ -n "${{ secrets.GIT_PUSH_TOKEN }}" ]; then
            echo "token=${{ secrets.GIT_PUSH_TOKEN }}" >> $GITHUB_OUTPUT
          else
            echo "token=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          fi

      - name: Clone target (write)
        shell: bash
        run: |
          git clone "https://x-access-token:${{ steps.t.outputs.token }}@github.com/${{ env.ORG }}/${{ steps.v.outputs.repo }}.git" target
          cd target
          git config user.name "autopilot"
          git config user.email "autopilot@${{ env.ORG }}"

      - name: Fix Android (embedding v2 + gradle + minimal structure)
        shell: bash
        run: |
          set -e
          cd target
          PKG="${{ steps.v.outputs.pkg }}"
          JAVA_DIR="android/app/src/main/java/$(echo "$PKG" | tr '.' '/')"
          mkdir -p "$JAVA_DIR"
          cat > "$JAVA_DIR/MainActivity.java" <<EOF
package $PKG;

import io.flutter.embedding.android.FlutterActivity;

public class MainActivity extends FlutterActivity { }
EOF

          M="android/app/src/main/AndroidManifest.xml"
          if [ -f "$M" ] && ! grep -q 'flutterEmbedding' "$M"; then
            awk 'BEGIN{d=0} /<application/{print; if(!d){print "        <meta-data android:name=\"flutterEmbedding\" android:value=\"2\" />"; d=1; next} } {print}' "$M" > __m && mv __m "$M"
          fi

          if [ -f android/app/build.gradle ]; then
            sed -i 's/compileSdk [0-9][0-9]*/compileSdk 34/g' android/app/build.gradle || true
            sed -i 's/minSdk [0-9][0-9]*/minSdk 24/g' android/app/build.gradle || true
            grep -q 'androidx.multidex:multidex' android/app/build.gradle 2>/dev/null || \
              awk '/dependencies *\{/{print;print "    implementation \"androidx.multidex:multidex:2.0.1\"";next}1' android/app/build.gradle > __g && mv __g android/app/build.gradle
          fi

          [ -f android/settings.gradle ] || echo "include ':app'" > android/settings.gradle
          mkdir -p android/app/src/main

      - name: Commit & push
        shell: bash
        run: |
          cd target
          git add -A
          if git diff --cached --quiet; then
            echo "no changes"
          else
            git commit -m "AutoFix: Android embedding v2 + gradle sanity"
            git push origin main
          fi

      - name: Trigger Codemagic
        shell: bash
        run: |
          curl -sS -X POST https://api.codemagic.io/builds \
            -H "x-auth-token: ${{ secrets.CODEMAGIC_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{ \"appId\": \"${{ secrets.CODEMAGIC_APP_ID }}\", \"workflowId\": \"${{ steps.v.outputs.wf }}\", \"branch\": \"main\" }"
