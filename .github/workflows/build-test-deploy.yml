name: Build, Test, and Deploy Apps

on:
  workflow_dispatch:
    inputs:
      app_to_build:
        description: 'Select which app to build'
        required: true
        default: 'smart_assistant'
        type: choice
        options: ['smart_assistant','control_panel']
      build_type:
        description: 'Select build type'
        required: true
        default: 'release'
        type: choice
        options: ['debug','release']

env:
  FLUTTER_VERSION: '3.22.0'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Decide app directory
        id: appdir
        run: |
          set -e
          # غيّر القيم التالية إذا أسماء مجلداتك مختلفة
          SA1="apps/smart_assistant"
          SA2="apps/smart-assistant-app"
          CP1="apps/control_panel"
          CP2="apps/control-panel"

          if [ "${{ github.event.inputs.app_to_build }}" = "smart_assistant" ]; then
            for d in "$SA1" "$SA2"; do
              if [ -d "$d" ]; then echo "dir=$d" >> $GITHUB_OUTPUT; exit 0; fi
            done
            echo "::error::لم أجد مجلد تطبيق Smart Assistant. أنشئ واحداً من: $SA1 أو $SA2"
            exit 1
          else
            for d in "$CP1" "$CP2"; do
              if [ -d "$d" ]; then echo "dir=$d" >> $GITHUB_OUTPUT; exit 0; fi
            done
            echo "::error::لم أجد مجلد تطبيق Control Panel. أنشئ واحداً من: $CP1 أو $CP2"
            exit 1
          fi

      - name: Setup Node.js (VA Server)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install & Build VA Server
        working-directory: apps/va-server
        run: |
          set -euxo pipefail
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npm run build
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          MANOS_TOKEN: ${{ secrets.MANOS_TOKEN }}
          BLACK_FX_SOURCES: ${{ secrets.BLACK_FX_SOURCES }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Quick VA Smoke (build-time)
        run: node -e "console.log('VA build done ✅')"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Flutter pub get
        working-directory: ${{ steps.appdir.outputs.dir }}
        run: |
          set -euxo pipefail
          flutter --version
          flutter pub get
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Flutter tests
        working-directory: ${{ steps.appdir.outputs.dir }}
        run: |
          set -euxo pipefail
          flutter test

      # خيار Codemagic
      - name: Trigger Codemagic (Smart Assistant)
        if: ${{ github.event.inputs.app_to_build == 'smart_assistant' }}
        uses: codemagic-ci-cd/trigger-codemagic-workflow-action@v2.0.0
        with:
          token: ${{ secrets.CODEMAGIC_API_TOKEN }}
          app-id: ${{ secrets.CODEMAGIC_APP_ID }}
          workflow-id: ${{ secrets.CODEMAGIC_WORKFLOW_ID_SMART_ASSISTANT }}
        env:
          CM_BUILD_TYPE: ${{ github.event.inputs.build_type }}

      - name: Trigger Codemagic (Control Panel)
        if: ${{ github.event.inputs.app_to_build == 'control_panel' }}
        uses: codemagic-ci-cd/trigger-codemagic-workflow-action@v2.0.0
        with:
          token: ${{ secrets.CODEMAGIC_API_TOKEN }}
          app-id: ${{ secrets.CODEMAGIC_CONTROL_PANEL_ID }}
          workflow-id: ${{ secrets.CODEMAGIC_WORKFLOW_ID_CONTROL_PANEL }}
        env:
          CM_BUILD_TYPE: ${{ github.event.inputs.build_type }}

      # (اختياري) لو بدك نبني APK هنا بدل Codemagic، خبرني أضيف الخطوات.

      - name: Done
        run: echo "Workflow finished. Check Codemagic for APK artifact."
